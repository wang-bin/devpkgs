{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    //"runner": "terminal",
    "command": "cmake",
    //"isShellCommand": true,
    "options": {
        "env":{
            "NINJA_STATUS": "[%f/%t %e %r %s]",
        }
    },
    "tasks": [
        {
            "label": "config.host",
            "args": [
                "-DWITH_LTO_STATIC=0",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/host",
                "-GNinja",
                //"-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9",
                //"-DCMAKE_OSX_ARCHITECTURES=arm64",
                "-DFRIBIDI_GENTAB=1",
                //"-DBUILD_SHARED_LIBS=0",
                //"-DDAV1D_NO_ASM=1",
                "-DMIN_SIZE=1",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/host/install"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.host",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/host"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "config.macosx64",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/macosx64",
                "-GNinja",
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9",
                "-DCMAKE_OSX_ARCHITECTURES=x86_64",
                "-DFRIBIDI_GENTAB=1",
                "-DBUILD_SHARED_LIBS=0",
                "-DMIN_SIZE=1",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/macosx64/install"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.macosx64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/macosx64"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "config.x64",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/x64",
                "-GNinja",
                "-DCMAKE_SYSTEM_NAME=Darwin", // explicitly set system name will enable CMAKE_CROSSCOMPILING
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9",
                "-DCMAKE_OSX_ARCHITECTURES=x86_64",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/x64/install"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.x64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/x64"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "config.macCatalyst",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/macCatalyst.cmake",
                "-DCMAKE_OSX_ARCHITECTURES=x86_64",
                "-DUSE_BITCODE=0",
                "-DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO",
                "-DCMAKE_IOS_INSTALL_COMBINED=YES",
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/catalyst/install",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/catalyst",
                "-GNinja"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.macCatalyst",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/catalyst"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.iOSSimulator",
            "args": [
                "-DCMAKE_SYSTEM_NAME=iOS",
                "-DCMAKE_OSX_ARCHITECTURES=x86_64",
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=8.0",
                "-DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO",
                "-DCMAKE_IOS_INSTALL_COMBINED=YES",
                "-DCMAKE_OSX_SYSROOT=iphonesimulator",
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/iOSSimulator/install",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/iOSSimulator",
                "-GNinja"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.iOSSimulator",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/iOSSimulator"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.iOS",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/iOS",
                "-GNinja",
                "-DCMAKE_SYSTEM_NAME=iOS", // explicitly set system name will enable CMAKE_CROSSCOMPILING
                //"-DCMAKE_OSX_SYSROOT=iphoneos",
                //"-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/ios.cmake",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/iOS/install",
                "-DCMAKE_OSX_ARCHITECTURES=arm64",
                //"-DIOS_ARCH=arm64",
                "-DBUILD_WOLFSSL=1",
                "-DHB_IOS=1",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.iOS",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/iOS"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.tvOS",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/tvOS",
                "-GNinja",
                "-DCMAKE_SYSTEM_NAME=tvOS", // explicitly set system name will enable CMAKE_CROSSCOMPILING
                //"-DCMAKE_OSX_SYSROOT=appletvos",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/tvOS/install",
                "-DCMAKE_OSX_ARCHITECTURES=arm64",
                "-DMIN_SIZE=1",
                "-DBUILD_WOLFSSL=1",
                "-DHB_IOS=1",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.tvOS",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/tvOS"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.tvOSSimulator",
            "args": [
                "-DCMAKE_SYSTEM_NAME=tvOS",
                "-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64",
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=8.0",
                "-DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO",
                "-DCMAKE_IOS_INSTALL_COMBINED=YES",
                "-DCMAKE_OSX_SYSROOT=appletvsimulator",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/tvOSSimulator/install",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/tvOSSimulator",
                "-GNinja",
                "-DMIN_SIZE=1",
                "-DBUILD_WOLFSSL=1",
                "-DDAV1D_NO_ASM=1",
                "-DLIBASS_NO_ASM=1",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.tvOSSimulator",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/tvOSSimulator"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.visionOS",
            "args": [
                "-DCMAKE_SYSTEM_NAME=visionOS",
                "-DCMAKE_OSX_ARCHITECTURES=arm64",
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=1.0", // VT since 10.2
                "-DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO",
                //"-DCMAKE_IOS_INSTALL_COMBINED=YES",
                //"-DCMAKE_OSX_SYSROOT=xros",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/xrOS/install",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/xrOS",
                "-GNinja",
                "-DMIN_SIZE=1",
                "-DBUILD_WOLFSSL=1",
                "-DHB_IOS=1",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.visionOS",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/xrOS"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.xrSimulator",
            "args": [
                "-DCMAKE_SYSTEM_NAME=visionOS",
 // libclang_rt.xros.a': fat file missing arch 'x86_64', file has 'armv7,armv7s,armv7k,arm64,arm64e'. ld: warning: no platform load command found in asm.o
                "-DCMAKE_OSX_ARCHITECTURES=arm64",
                "-DCMAKE_OSX_DEPLOYMENT_TARGET=1.0", // VT since 10.2
                "-DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH=NO",
                //"-DCMAKE_IOS_INSTALL_COMBINED=YES",
                "-DCMAKE_OSX_SYSROOT=xrsimulator",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/xrSimulator/install",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/xrSimulator",
                "-GNinja",
                "-DMIN_SIZE=1",
                "-DBUILD_WOLFSSL=1",
                "-DDAV1D_NO_ASM=1",
                "-DLIBASS_NO_ASM=1",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.xrSimulator",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/xrSimulator"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.ohos.arm64",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${env:OHOS_NDK}/build/cmake/ohos.toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DOHOS_ARCH=arm64-v8a",
                "-DCMAKE_C_COMPILER_FRONTEND_VARIANT=GNU",
                "-DCMAKE_CXX_COMPILER_FRONTEND_VARIANT=GNU",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/ohos-arm64",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/ohos-arm64/install",
                //"-DCMAKE_ANDROID_NDK_VERSION=25.1", //INTERPROCEDURAL_OPTIMIZATION: cmake will force gold linker if CMAKE_ANDROID_NDK_VERSION is not set(e.g. use ndk's cmake toolchain file) or less than 22
            ],
            "problemMatcher": []
        },
        {
            "label": "build.ohos.arm64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/ohos-arm64"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.android.x64",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${env:ANDROID_NDK}/build/cmake/android.toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                //"-DANDROID_TOOLCHAIN=clang",
                "-DANDROID_STL=c++_shared",
                "-DANDROID_ABI=x86_64",
                "-DANDROID_PLATFORM=android-21",
                "-DANDROID_PIE=ON",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/android-x64",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/android-x64/install",
                //"-DCMAKE_ANDROID_NDK_VERSION=25.1", //INTERPROCEDURAL_OPTIMIZATION: cmake will force gold linker if CMAKE_ANDROID_NDK_VERSION is not set(e.g. use ndk's cmake toolchain file) or less than 22
            ],
            "problemMatcher": []
        },
        {
            "label": "build.android.x64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/android-x64"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.android.arm64",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${env:ANDROID_NDK}/build/cmake/android.toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DANDROID_TOOLCHAIN=clang",
                "-DANDROID_STL=c++_shared",
                "-DANDROID_ABI=arm64-v8a",
                "-DANDROID_PLATFORM=android-21",
                "-DANDROID_PIE=ON",
                "-DCMAKE_C_COMPILER_FRONTEND_VARIANT=GNU",
                "-DCMAKE_CXX_COMPILER_FRONTEND_VARIANT=GNU",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/android-arm64",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/android-arm64/install",
                //"-DCMAKE_ANDROID_NDK_VERSION=25.1", //INTERPROCEDURAL_OPTIMIZATION: cmake will force gold linker if CMAKE_ANDROID_NDK_VERSION is not set(e.g. use ndk's cmake toolchain file) or less than 22
            ],
            "problemMatcher": []
        },
        {
            "label": "build.android.arm64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/android-arm64"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.android.armv7",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${env:ANDROID_NDK}/build/cmake/android.toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-DANDROID_TOOLCHAIN=clang",
                "-DANDROID_STL=c++_shared",
                "-DANDROID_ABI=armeabi-v7a",
                "-DANDROID_PLATFORM=android-21",
                "-DANDROID_PIE=ON",
                "-DCMAKE_C_COMPILER_FRONTEND_VARIANT=GNU",
                "-DCMAKE_CXX_COMPILER_FRONTEND_VARIANT=GNU",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/android-armv7",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/android-armv7/install",
                //"-DCMAKE_ANDROID_NDK_VERSION=25.1", //INTERPROCEDURAL_OPTIMIZATION: cmake will force gold linker if CMAKE_ANDROID_NDK_VERSION is not set(e.g. use ndk's cmake toolchain file) or less than 22
            ],
            "problemMatcher": []
        },
        {
            "label": "build.android.armv7",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/android-armv7"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.android.arm64.cmake",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-DCMAKE_SYSTEM_NAME=Android",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/android-arm64-cmake",
                "-GNinja",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
                "-DCMAKE_ANDROID_NDK=${env:ANDROID_NDK}",
                "-DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang",
                "-DCMAKE_ANDROID_STL_TYPE=c++_shared",
                "-DCMAKE_ANDROID_ARCH_ABI=arm64-v8a",
                "-DCMAKE_SYSTEM_VERSION=21"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.android.arm64.cmake",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/android-arm64-cmake"
            ],
            "group": "build"
        },
        {
            "label": "config.linux.arm64.clang",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/linux.clang.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/linux.arm64.clang",
                "-GNinja",
                "-DUSE_COMPILER_RT=0",
                "-DUSE_LIBCXX=1",
                //"-DUSE_CXXABI=c++abi",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/linux.arm64.clang/install",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DLINUX_SYSROOT=${env:LINUX_SYSROOT}",
                "-DCMAKE_SYSTEM_PROCESSOR=arm64"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.linux.arm64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/linux.arm64.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.linux.armhf.clang",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/linux.clang.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/linux.armhf.clang",
                "-GNinja",
                "-DUSE_COMPILER_RT=0",
                "-DUSE_LIBCXX=1",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/linux.armhf.clang/install",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DCMAKE_C_COMPILER=clang-15",
                "-DLINUX_SYSROOT=${env:LINUX_SYSROOT}",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
                "-DCMAKE_SYSTEM_PROCESSOR=armhf"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.linux.armhf.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/linux.armhf.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.linux64.clang",
            "args": [
                //"-DWITH_LTO=0",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/linux.clang.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/linux64.clang",
                "-GNinja",
                "-DUSE_COMPILER_RT=0",
                "-DUSE_LIBCXX=1",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/linux64.clang/install",
                "-DCMAKE_CROSSCOMPILING=1",
                //"-DCMAKE_C_COMPILER=clang-15",
                "-DLINUX_SYSROOT=${env:LINUX_SYSROOT}",
                "-DCMAKE_SYSTEM_PROCESSOR=amd64"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.linux64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/linux64.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.linux64.clang.gnustl",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/linux.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x64",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/linux64.clang.gnustl",
                "-DLINUX_SYSROOT=${env:LINUX_SYSROOT}",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/linux64.clang.gnustl/install",
                "-DUSE_COMPILER_RT=0",
                "-DUSE_LIBCXX=OFF",
                "-DBUILD_LIBASS=0",
                //"-DUSE_STDCXX=8"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.linux64.clang.gnustl",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/linux64.clang.gnustl"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.centos7.clang",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/centos.clang.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/centos7.clang",
                "-GNinja",
                "-DUSE_COMPILER_RT=0",
                "-DUSE_LIBCXX=1",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/centos7.clang/install",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DCMAKE_C_COMPILER=clang-15",
                "-DLINUX_SYSROOT=${env:CENTOS_SYSROOT}",
                "-DCMAKE_SYSTEM_PROCESSOR=amd64"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.centos7.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/centos7.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.rpi.clang",
            "args": [
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/rpi.clang.cmake",
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/rpi.clang",
                "-GNinja",
                "-DUSE_COMPILER_RT=0",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/rpi.clang/install",
                "-DLINUX_SYSROOT=${env:RPI_SYSROOT}"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.rpi.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/rpi.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.mingw64",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/mingw64",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/mingw64/install",
                "-GNinja",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/llvm-mingw.cmake",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DCMAKE_SYSTEM_PROCESSOR=x86_64",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
                "-DBUILD_WOLFSSL=0"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.mingw64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/mingw64"
            ],
            "group": "build"
        },
        {
            "label": "config.mingw32",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/mingw32",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/mingw32/install",
                "-GNinja",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/llvm-mingw.cmake",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DCMAKE_SYSTEM_PROCESSOR=x86",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
                "-DBUILD_WOLFSSL=0"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.mingw32",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/mingw32"
            ],
            "group": "build"
        },
        {
            "label": "config.arm64mingw",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/arm64mingw",
                "-GNinja",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/llvm-mingw.cmake",
                "-DCMAKE_CROSSCOMPILING=1",
                "-DCMAKE_SYSTEM_PROCESSOR=arm64",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
            ],
            "problemMatcher": []
        },
        {
            "label": "build.arm64mingw",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/arm64mingw"
            ],
            "group": "build"
        },
        {
            "label": "config.vs2022x64",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/vs2022x64",
                "-G",
                "Visual Studio 17 2022",
                "-A",
                "x64",
                "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL",
                "-DCMAKE_VS_JUST_MY_CODE_DEBUGGING=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.vs2022x64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/vs2022x64",
                "--",
                "-m",
                "-p:Configuration=RelWithDebInfo"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.vs2022x86",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/vs2022x86",
                "-G",
                "Visual Studio 17 2022",
                "-A",
                "Win32",
                "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL",
                "-DCMAKE_VS_JUST_MY_CODE_DEBUGGING=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.vs2022x86",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/vs2022x86",
                "--",
                "-p:Configuration=RelWithDebInfo"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.vs2022uwp64",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/vs2022uwp64",
                "-G",
                "Visual Studio 17 2022",
                "-A",
                "x64",
                "-DCMAKE_VS_JUST_MY_CODE_DEBUGGING=1",
                "-DCMAKE_SYSTEM_NAME=WindowsStore",
                "-DCMAKE_SYSTEM_VERSION=10.0"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.vs2022uwp64",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/vs2022uwp64",
                "--",
                "-p:Configuration=RelWithDebInfo"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.vs2022uwparm",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/vs2022uwparm",
                "-G",
                "Visual Studio 17 2022",
                "-A",
                "arm",
                "-DCMAKE_VS_JUST_MY_CODE_DEBUGGING=1",
                "-DCMAKE_SYSTEM_NAME=WindowsStore",
                "-DCMAKE_SYSTEM_VERSION=10.0"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.vs2022uwparm",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/vs2022uwparm",
                "--",
                "-m",
                "-p:Configuration=RelWithDebInfo"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.win32.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/win32.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x86",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/win32.clang/install",
                "-DCMAKE_C_COMPILER=clang-cl",
                "-DWINSDK_VER=10.0.19041.0",
                "-DWINSDK_DIR=/Volumes/dev/winsdk",
                "-DMSVC_DIR=/Volumes/dev/msvcrt-dev",
                "-DFT_DISABLE_BROTLI=1",
                "-DFT_DISABLE_PNG=1",
                "-DHB_BUILD_SUBSET=0",
                "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.win32.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/win32.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.win64.clang",
            "args": [
                //"-DDAV1D_NO_ASM=0",
                "-DCMAKE_BUILD_TYPE=Release",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/win64.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x64",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/win64.clang/install",
                //"-DCMAKE_C_COMPILER=clang-cl",
                "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL",
                //"-DWITH_VC_LTL=0",
                "-GNinja"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.win64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/win64.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.win64ltl.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/win64ltl.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x64",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/win64ltl.clang/install",
                //"-DCMAKE_C_COMPILER=clang-cl",
                "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded",
                "-DWITH_VC_LTL=1",
                "-GNinja"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.win64ltl.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/win64ltl.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.woa64.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/woa64.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=arm64ec",
                "-GNinja",
                "-DCMAKE_INSTALL_PREFIX=${workspaceRoot}/build/woa64.clang/install"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.woa64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/woa64.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.uwp_arm.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel", // RelWithDebInfo/Debug crashes clang: target does not implement codeview register mapping
                "-DWITH_DEB_INFO=0",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/uwp_arm.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=arm",
                "-GNinja",
                "-DUWP=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.uwp_arm.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/uwp_arm.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.uwp_arm64.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=MinSizeRel",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/uwp_arm64.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=arm64",
                "-GNinja",
                "-DUWP=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.uwp_arm64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/uwp_arm64.clang"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "config.uwp_x64.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/uwp_x64.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x64",
                "-GNinja",
                "-DUWP=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.uwp_x64.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/uwp_x64.clang"
            ],
            "group": "build"
        },
        {
            "label": "config.uwp_x86.clang",
            "args": [
                "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
                "-H${workspaceRoot}",
                "-B${workspaceRoot}/build/uwp_x86.clang",
                "-DCMAKE_TOOLCHAIN_FILE=${workspaceRoot}/cmake/tools/windows.clang.cmake",
                "-DCMAKE_SYSTEM_PROCESSOR=x86",
                "-GNinja",
                "-DUWP=1"
            ],
            "problemMatcher": []
        },
        {
            "label": "build.uwp_x86.clang",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceRoot}/build/uwp_x86.clang"
            ],
            "group": "build",
            "problemMatcher": []
        }
    ],
}